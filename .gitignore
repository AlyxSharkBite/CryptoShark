# .gitignore template for JetBrains Rider, ReSharper, and .NET Core projects
# This file is designed to exclude IDE-specific files, build artifacts, temporary files, 
# and other unnecessary files that should not be committed to a Git repository.
# The template focuses on JetBrains Rider but also supports Visual Studio and .NET Core.

## User-Specific Files
# Exclude user-specific files that are unique to each developer's environment.
*.rsuser          # Rider user-specific settings
*.suo             # Visual Studio solution user options
*.user            # Visual Studio user-specific settings
*.userosscache    # User Open Source cache
*.sln.docstates   # Solution document states
*.userprefs       # MonoDevelop/Xamarin Studio preferences
*.DotSettings.user # ReSharper/Rider user-specific settings
*.snk             # Strong name files can pose security risks
*.env

## IDE-Specific Files
# JetBrains Rider and ReSharper
.idea/                 # Exclude all Rider project settings
!.idea/modules.xml     # Include shared project structure
!.idea/libraries/      # Include shared library definitions
!.idea/codeStyles/     # Include shared code style settings
!.idea/inspectionProfiles/ # Include shared inspection profiles
!.idea/runConfigurations/  # Include shared run/debug configurations
!.idea/dictionaries/   # Include shared dictionaries for spelling
_ReSharper*/           # Exclude ReSharper files
*.[Rr]e[Ss]harper      # Exclude additional ReSharper artifacts
*.userprefs

# Visual Studio-Specific Files
.vs/                   # Visual Studio temporary settings
*.vspscc               # Source code control files
*.vssscc               # Source code control files
.builds                # MSBuild files

## Build Results
# Ignore build artifacts generated by .NET and Visual Studio.
[Bb]in/                # Output binaries
[Oo]bj/                # Intermediate object files
[Dd]ebug*/             # Debug output folders
[Rr]elease*/           # Release output folders
artifacts/             # Custom build artifacts
bld/                   # Build directories
[Ll]og/                # Logs generated during builds
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]64
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
[Aa][Rr][Mm]64[Ee][Cc]/
bld/
[Oo]bj/
[Oo]ut/
[Ll]og/
[Ll]ogs/

# General
.DS_Store
.AppleDouble
.LSOverride
Icon[]

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Visual Studio 2015/2017 cache/options directory
.vs/

# Visual Studio 2017 auto generated files
Generated\ Files/

## Temporary and Log Files
# Ignore temporary files, logs, and caches created during development.
*.log                  # Log files
*.tmp                  # Temporary files
*.tmp_proj             # Temporary project files
*.pidb                 # MonoDevelop intermediate files
*.svclog               # Service logs
*.cachefile            # Cache files
*.VC.db                # Visual Studio database files
*.opt                  # Visual Studio options files
*.plg                  # Visual Studio legacy project logs

## Testing and Profiling Files
# Ignore test results and profiling artifacts.
[Tt]est[Rr]esult*/     # Test result directories
[Bb]uild[Ll]og.*       # Build logs
*.VisualState.xml      # NUnit visual state files
TestResult.xml         # Test result files
nunit-*.xml            # NUnit test output
*.psess                # Visual Studio performance sessions
*.vsp                  # Visual Studio profiler files
*.vspx                 # Visual Studio profiler files
*.sap                  # Visual Studio analyzer files
OpenCover/             # OpenCover analysis results

## NuGet
# Ignore NuGet packages and restore artifacts.
*.nupkg                # NuGet package files
*.snupkg               # NuGet symbol package files
**/[Pp]ackages/*       # NuGet packages folder
!**/[Pp]ackages/build/ # Allow MSBuild targets
*.nuget.props          # NuGet properties
*.nuget.targets        # NuGet targets

## Node.js Dependencies
# Ignore Node.js modules (if applicable).
node_modules/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
*.trx

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Approval Tests result files
*.received.*

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

## Publish and Deployment Files
# Ignore files related to application publishing and deployment.
publish/               # Publish output
*.publishproj          # Publish project files
*.pubxml               # Publish profile XML files
*.azurePubxml          # Azure publish profiles
PublishScripts/        # Custom publish scripts
*.appx                 # Windows app package files
*.appxbundle           # Windows app bundle files
*.appxupload           # Appx upload files
csx/                   # Azure Cloud Service scripts
*.build.csdef          # Build definition files

## Configuration and Generated Files
# Ignore generated configuration files and binaries.
*.runtimeconfig.dev.json # .NET runtime configuration
*.deps.json            # Dependency context files
*.props                # MSBuild property files
*.targets              # MSBuild target files
*.dbmdl                # Database model files
*.dbproj.schemaview    # Database schema view files
orleans.codegen.cs     # Orleans code generation files

## Microsoft Azure
# Ignore files related to Azure.
ecf/                   # Azure Emulator config files
rcf/                   # Remote config files

## SQL Server Files
# Ignore SQL Server database files.
*.mdf                  # Primary database file
*.ldf                  # Log database file
*.ndf                  # Secondary database file

## Backup, Migration, and Upgrade Files
# Ignore files created during migration or upgrades.
MigrationBackup/       # Backup during migrations
_UpgradeReport_Files/  # Upgrade report files
UpgradeLog*.XML        # Upgrade logs
UpgradeLog*.htm        # Upgrade logs

## Benchmarking and Code Coverage
# Ignore files related to benchmarking and code coverage.
BenchmarkDotNet.Artifacts/ # BenchmarkDotNet output
*.coverage             # Code coverage results
*.coveragexml          # Code coverage results (XML)
*.dotCover             # JetBrains dotCover files

## Dependency Managers
# Ignore files generated by dependency managers.
.paket/paket.exe       # Paket dependency manager
paket-files/           # Paket files folder

## Local Tool and Environment Files
# Ignore local environment-specific files.
multipass/             # Multipass configuration
multipass/argocd.exe   # Multipass ArgoCD executable
multipass/kubectl.exe  # Multipass kubectl executable
multipass/dapr.exe     # Multipass Dapr executable

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.idb
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
# but not Directory.Build.rsp, as it configures directory-level build defaults
!Directory.Build.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# DotCover is a Code Coverage Tool
*.dotCover

# Visual Studio code coverage results
*.coverage
*.coveragexml

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
**/.paket/paket.exe
paket-files/

# FAKE - F# Make
**/.fake/

# CodeRush personal settings
**/.cr/personal

# Python Tools for Visual Studio (PTVS)
**/__pycache__/
*.pyc

# Cake - Uncomment if you are using it
#tools/**
#!tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog
MSBuild_Logs/

# AWS SAM Build and Temporary Artifacts folder
.aws-sam

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
**/.mfractor/

# Local History for Visual Studio
**/.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
**/.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

## Miscellaneous
# Catch-all for miscellaneous generated files.
*.sass-cache/          # SASS cache
ClientBin/             # Client binaries
~$*                    # Temporary files created by Office
*~                     # Backup files
*.jfm                  # Font cache files
*.pfx                  # Certificate files
*.publishsettings      # Azure publish settings
*.GhostDoc.xml         # GhostDoc settings
.mfractor/             # MFractor folder (Xamarin productivity tool)
.localhistory/         # Local history folder
healthchecksdb         # Temporary health check database

## OS-Specific Files
# Ignore OS-specific files.
.DS_Store              # macOS Finder metadata
Thumbs.db              # Windows Explorer metadata

# Editor-Specific (Optional)
# Uncomment if you do not use EditorConfig.
# .editorconfig
